const express = require('express');
const router = express.Router();

// IN-MEMORY DATABASE (This data remains the same)
const products = [
    {
        "_id": "686f68ed2bf5384209b236af", "name": "Running Shoes", "price": 120, "category": "Footwear",
        "variants": [
            { "color": "Red", "size": "M", "stock": 10, "_id": "686f68ed2bf5384209b236b0" },
            { "color": "Blue", "size": "L", "stock": 5, "_id": "686f68ed2bf5384209b236b1" }
        ], "__v": 0
    },
    {
        "_id": "686f68ed2bf5384209b238b2", "name": "Winter Jacket", "price": 200, "category": "Apparel",
        "variants": [
            { "color": "Black", "size": "S", "stock": 8, "_id": "686f68ed2bf5384209b238b3" },
            { "color": "Gray", "size": "M", "stock": 12, "_id": "686f68ed2bf5384209b238b4" }
        ], "__v": 0
    },
    {
        "_id": "686f63eb99ac2728b3f11082", "name": "Smartphone", "price": 699, "category": "Electronics",
        "variants": [], "__v": 0
    }
];

// This is the route we are updating with better styles
router.get('/', (req, res) => {
    
    let html = `
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Product Catalog</title>
            <style>
                /* --- NEW STYLES --- */
                body {
                    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
                    margin: 0;
                    padding: 20px;
                    background-color: #f0f2f5;
                    color: #333;
                }
                .container {
                    max-width: 900px;
                    margin: 0 auto;
                }
                header {
                    text-align: center;
                    margin-bottom: 40px;
                }
                header h1 {
                    font-size: 2.5em;
                    color: #1c1e21;
                    border-bottom: 2px solid #e0e0e0;
                    padding-bottom: 10px;
                }
                .product-grid {
                    display: grid;
                    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
                    gap: 20px;
                }
                .product { 
                    background-color: #ffffff; 
                    border: 1px solid #dddfe2; 
                    border-radius: 12px; 
                    padding: 20px; 
                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
                    transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
                }
                .product:hover {
                    transform: translateY(-5px);
                    box-shadow: 0 8px 24px rgba(0, 0, 0, 0.12);
                }
                .product h2 {
                    font-size: 1.5em;
                    margin-top: 0;
                    margin-bottom: 10px;
                    color: #0056b3;
                }
                .product .details {
                    font-size: 1em;
                    color: #555;
                    margin-bottom: 15px;
                }
                .product .details span {
                    display: block;
                    margin-bottom: 5px;
                }
                .product h3 {
                    font-size: 1.1em;
                    border-top: 1px solid #eee;
                    padding-top: 15px;
                    margin-top: 15px;
                }
                ul {
                    list-style-type: none;
                    padding-left: 0;
                }
                li {
                    background-color: #f7f7f7;
                    padding: 8px 12px;
                    border-radius: 6px;
                    margin-bottom: 5px;
                    font-size: 0.9em;
                }
            </style>
        </head>
        <body>
            <div class="container">
                <header>
                    <h1>E-Commerce Product Catalog</h1>
                </header>
                <div class="product-grid">
    `;

    products.forEach(product => {
        html += `
            <div class="product">
                <h2>${product.name}</h2>
                <div class="details">
                    <span><strong>Price:</strong> $${product.price}</span>
                    <span><strong>Category:</strong> ${product.category}</span>
                </div>
        `;
        
        if (product.variants.length > 0) {
            html += '<h3>Variants:</h3><ul>';
            product.variants.forEach(variant => {
                html += `<li>Color: ${variant.color}, Size: ${variant.size} (Stock: ${variant.stock})</li>`;
            });
            html += '</ul>';
        } else {
            html += '<h3>Variants:</h3><p>No variants available.</p>';
        }

        html += '</div>'; // Close product div
    });

    html += `
                </div> 
            </div>
        </body>
        </html>
    `;

    res.send(html);
});

// The other routes remain unchanged
router.get('/category/:categoryName', (req, res) => {
    const categoryName = req.params.categoryName;
    res.status(200).json(products.filter(p => p.category === categoryName));
});

router.get('/by-color/:color', (req, res) => {
    const color = req.params.color;
    res.status(200).json(products.filter(p => p.variants.some(v => v.color === color)));
});

module.exports = router;

const express = require('express');
const router = express.Router();

// IN-MEMORY DATABASE
// Since we cannot install mongoose, we will simulate the database with an array.
// This data matches the structure from your "Expected Output" images.
const products = [
    {
        "_id": "686f68ed2bf5384209b236af",
        "name": "Running Shoes",
        "price": 120,
        "category": "Footwear",
        "variants": [
            { "color": "Red", "size": "M", "stock": 10, "_id": "686f68ed2bf5384209b236b0" },
            { "color": "Blue", "size": "L", "stock": 5, "_id": "686f68ed2bf5384209b236b1" }
        ]
    },
    {
        "_id": "686f68ed2bf5384209b238b2",
        "name": "Winter Jacket",
        "price": 200,
        "category": "Apparel",
        "variants": [
            { "color": "Black", "size": "S", "stock": 8, "_id": "686f68ed2bf5384209b238b3" },
            { "color": "Gray", "size": "M", "stock": 12, "_id": "686f68ed2bf5384209b238b4" }
        ]
    },
    {
        "_id": "686f63eb99ac2728b3f11082",
        "name": "Smartphone",
        "price": 699,
        "category": "Electronics",
        "variants": []
    }
];


// GET all products
// Matches: GET http://localhost:3000/products
router.get('/', (req, res) => {
    // Instead of querying a database, just return our array.
    res.status(200).json(products);
});

// GET products by category
// Matches: GET http://localhost:3000/products/category/Electronics
router.get('/category/:categoryName', (req, res) => {
    const categoryName = req.params.categoryName;
    // Use the JavaScript .filter() method to search our array.
    const filteredProducts = products.filter(product => product.category === categoryName);
    res.status(200).json(filteredProducts);
});

// GET products that have a specific color variant
// Matches: GET http://localhost:3000/products/by-color/Blue
router.get('/by-color/:color', (req, res) => {
    const color = req.params.color;
    // Filter products where at least one of its variants has the matching color.
    const filteredProducts = products.filter(product => 
        product.variants.some(variant => variant.color === color)
    );
    res.status(200).json(filteredProducts);
});

module.exports = router;
const express = require('express');
const productRoutes = require('./routes/index.js');

const app = express();
const port = 3000;

// Middleware
app.use(express.json());
app.use(express.urlencoded({ extended: true }));


// --- THIS IS THE FIX ---
// Add a route for the homepage (/) that redirects to the /products page.
app.get('/', (req, res) => {
    res.redirect('/products');
});
// ----------------------


// Use the product routes for any URL starting with /products
app.use('/products', productRoutes);

// Start the server
app.listen(port, () => {
    console.log(`Server is running on http://localhost:${port}`);
});
